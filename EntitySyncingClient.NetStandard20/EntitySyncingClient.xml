<?xml version="1.0"?>
<doc>
    <assembly>
        <name>EntitySyncingClient</name>
    </assembly>
    <members>
        <member name="F:EntitySyncingClient.Engine.InEntitySynchro">
            <summary>
            Indicates if InSync mode
            </summary>
        </member>
        <member name="F:EntitySyncingClient.Engine.Verbose">
            <summary>
            For different technical message into LoggerClass
            </summary>
        </member>
        <member name="F:EntitySyncingClient.Engine.RaiseSyncProcessEach">
            <summary>
            Quantity of processed elements to raise SyncProcess  
            </summary>
        </member>
        <member name="F:EntitySyncingClient.Engine._serverSender">
            <summary>
            Url / payload
            </summary>
        </member>
        <member name="M:EntitySyncingClient.Engine.#ctor(DBreeze.DBreezeEngine,System.Func{System.String,System.Byte[],System.Threading.Tasks.Task{System.Byte[]}},System.Action,System.Action,EntitySyncingClient.ILogger,System.Func{System.Object,System.Byte[]},System.Func{System.Byte[],System.Type,System.Object})">
            <summary>
            
            </summary>
            <param name="dbEngine"></param>
            <param name="serverSender"></param>
            <param name="resetWebSession"></param>
            <param name="syncIsFinishing"></param>
            <param name="logger">can be null</param>
            <param name="byteArraySerializer">can be null then DBreeze embedded serializer will be used</param>
            <param name="byteArrayDeSerializer">can be null then DBreeze embedded deserializer will be used</param>
        </member>
        <member name="M:EntitySyncingClient.Engine.AddEntity4Sync``1(EntitySyncingClient.EntitySyncingBaseV1{``0})">
            <summary>
            Adds entity 4 sync of StrategyV1
            </summary>
            <typeparam name="T"></typeparam>
            <param name="table"></param>
            <param name="entity"></param>
        </member>
        <member name="M:EntitySyncingClient.EntitySyncingBaseV1`1.OnInsertEntity(`0,`0,System.Byte[],System.Int64)">
            <summary>
            
            </summary>
            <param name="entity"></param>
            <param name="oldEntity"></param>
            <param name="nonDeserializedEntity"></param>
            <param name="changedID">contains old ID of the entity after server changed it</param>
        </member>
        <member name="F:EntitySyncingClient.EntitySyncingBaseV1`1.tran">
            <summary>
            Will be set automatically and will be available in entity handler
            </summary>
        </member>
        <member name="F:EntitySyncingClient.EntitySyncingBaseV1`1.entityContentTable">
            <summary>
            In case if value of the entity differs from the table where synchronizer holds data (refToValueDataBlockWithFixedAddress)
            </summary>
        </member>
        <member name="F:EntitySyncingClient.EntitySyncingBaseV1`1.LimitationOfEntitesPerRound">
            <summary>
            Default is 10000. Quantity of entites that must be synchronized per one SendToServer call.
            </summary>
        </member>
        <member name="P:EntitySyncingClient.EntitySyncingBaseV1`1.GetEntityContentTable">
            <summary>
            Chooses between entityContentTable and entityTable
            </summary>
        </member>
        <member name="F:EntitySyncingClient.EntitySyncingBaseV1`1.urlSync">
            <summary>
            Example "/modules.http.GM_PersonalDevice/IDT_Actions"
            </summary>
        </member>
        <member name="P:EntitySyncingClient.ISyncEntity.Id">
            <summary>
            Must be always ID of the local storage (for Mobile - LocalID, for Server - ServerID)
            </summary>
        </member>
        <member name="P:EntitySyncingClient.SyncOperation.SyncTimestamp">
            <summary>
            TimeStamp when Entity operation has occured; Synchronization ID (for all entities inside of company)
            </summary>
        </member>
        <member name="P:EntitySyncingClient.SyncOperation.SerializedObject">
            <summary>
            
            </summary>
        </member>
        <member name="P:EntitySyncingClient.SyncOperation.Operation">
            <summary>
            
            </summary>
        </member>
        <member name="P:EntitySyncingClient.SyncOperation.Type">
            <summary>
            Entity type
            </summary>
        </member>
        <member name="P:EntitySyncingClient.SyncOperation.InternalId">
            <summary>
            Roles as UID (for disconnected unique IDs)
            Internal ID of the entity in disconnected client (External ID is unified entity ID on the server).
            0 if not set
            </summary>
        </member>
        <member name="P:EntitySyncingClient.SyncOperation.ExternalId">
            <summary>
            Server side ID
            </summary>
        </member>
        <member name="M:EntitySyncingClient.SyncStrategyV1`1.InsertIndex4Sync(DBreeze.Transactions.Transaction,System.String,`0,System.Byte[],`0)">
            <summary>
            Fills up index 200. Creation of transaction, synchronization of the table and transaction commit is outside of this function.
            Entity desired ID and SyncTimestamp must be specified
            </summary>
            <param name="tran"></param>
            <param name="table">Where must be stored index 200</param>
            <param name="entity">entity.Id and entity.SyncTimestamp must be filled up</param>
            <param name="ptrEntityContent">pointer to the entity content (16 bytes) gathered with DBreeze InsertDataBlockWithFixedAddress</param>
            <param name="oldEntity">old instance of the entity from DB !!!MUST!!! be supplied when update or null when new entity</param>
        </member>
        <member name="M:EntitySyncingClient.SyncStrategyV1`1.SyncEntity">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
    </members>
</doc>
